# vim: ft=yaml.ansible
---
- name: Prepare installation
  hosts: localhost
  tasks:
    - name: Start ephemeral PXE server
      ansible.builtin.import_role:
        name: pxe_server
        tasks_from: start

- name: Install OS on nodes
  hosts: all
  gather_facts: false # delayed until after we woke up the target
  tasks:
    - name: Wake up nodes
      community.general.wakeonlan:
        mac: '{{ mac }}'
      delegate_to: localhost

    - name: Wait for node to be reachable
      ansible.builtin.wait_for_connection:
        connect_timeout: 1
        timeout: 600

    - name: Gather facts
      ansible.builtin.setup:

    - name: Setup boot drive
      become: true
      ansible.builtin.import_role:
        name: disk_setup
      vars:
        disk_setup_dev: '{{ boot_disk }}'
        disk_setup_partitions_spec: |-
          label: gpt
          size=512M, type=U, name=boot
          size=+,    type=L, name=root
        disk_setup_mountpoint_prefix: /mnt
        disk_setup_filesystems:
          - dev: /dev/disk/by-partlabel/boot
            type: vfat
            opts: -F32 -n boot
            mountpoint: /boot
          - dev: /dev/disk/by-partlabel/root
            type: btrfs
            opts: --label nixos
            mountpoint: /mnt/rootfs
        disk_setup_btrfs_subvolumes:
          - dev: /dev/disk/by-label/nixos
            subvolumes:
              # Classic stuff
              - name: '@'
                mountpoint: /
              - name: '@nix'
                mountpoint: /nix
              - name: '@var'
                mountpoint: /var
              - name: '@log'
                mountpoint: /var/log
              - name: '@root'
                mountpoint: /root
              - name: '@home'
                mountpoint: /home
              # Store snapshots in a not mounted subvol
              - name: '@snapshots'
              # K3s subvols

    # - name: Generate NixOS config
    #   become: true
    #   ansible.builtin.command:
    #     cmd: nixos-generate-config --root /mnt
    #     creates: /mnt/etc/nixos/hardware-configuration.nix

    # Workaround the shutdown module not using the $PATH
    - name: Find shutdown command path # noqa: risky-shell-pipe
      ansible.builtin.shell:
        cmd: 'dirname $(whereis -b shutdown | cut -d" " -f2)'
        creates: # nothing
      register: shutdown_path

    # - name: Shutdown nodes
    #   become: true
    #   community.general.shutdown:
    #     search_paths: ['{{ shutdown_path.stdout }}']

- name: Cleanup installation
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Stop ephemeral PXE server
      ansible.builtin.import_role:
        name: pxe_server
        tasks_from: stop

