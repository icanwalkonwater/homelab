---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minecraft
  labels:
    app.kubernetes.io/name: minecraft
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: minecraft
  replicas: 1
  revisionHistoryLimit: 2
  serviceName: minecraft

  template:
    metadata:
      labels:
        app.kubernetes.io/name: minecraft
    spec:
      containers:
        - name: minecraft
          image: minecraft-gtnh
          env:
            - { name: INIT_MEMORY, value: 4G }
            - { name: MAX_MEMORY, value: 10G }
            - { name: EULA, value: 'true' }
            - { name: SEED, value: '1293967824733727157' }
            - { name: DIFFICULTY, value: '2' }
            - { name: VIEW_DISTANCE, value: '32' }
            - { name: MOTD, value: 'GregTech: Nuwu Horizowos' }
          ports:
            - { name: minecraft, containerPort: 25565 }
          volumeMounts:
            - { name: world, mountPath: /minecraft/World }
            - { name: backups, mountPath: /minecraft/backups }
            - name: provision-players
              mountPath: /minecraft/whitelist.json
              subPath: whitelist.json
              readOnly: true
            - name: provision-players
              mountPath: /minecraft/ops.json
              subPath: ops.json
              readOnly: true
          resources:
            requests: { cpu: 1000m, memory: 4Gi }
            limits: { cpu: 7000m, memory: 11Gi }

      volumes:
        - name: provision-players
          configMap:
            name: minecraft-gtnh-cm

  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  volumeClaimTemplates:
    - metadata:
        name: world
      spec:
        accessModes: [ReadWriteOncePod]
        storageClassName: local-path-fast
        resources:
          requests: { storage: 20Gi }
    - metadata:
        name: backups
      spec:
        accessModes: [ReadWriteOncePod]
        storageClassName: local-path-slow
        resources:
          requests: { storage: 100Gi }
