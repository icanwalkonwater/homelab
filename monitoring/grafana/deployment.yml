---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  replicas: 1
  strategy: {type: Recreate}

  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      containers:
        - name: grafana
          image: grafana
          env:
            - { name: GF_SERVER_ROOT_URL, value: https://admire.mon.enorme.uk }
            - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
              value: /etc/grafana/provisioning/dashboards/homelab/overview.json
            - { name: GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION, value: 'true' }
            - { name: GF_AUTH_DISABLE_LOGIN_FORM, value: 'true' }
            - { name: GF_AUTH_GENERIC_OAUTH_ENABLED, value: 'true' }
            - { name: GF_AUTH_GENERIC_OAUTH_NAME, value: Authelia }
            - { name: GF_AUTH_GENERIC_OAUTH_ICON, value: signin }
            - { name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID, value: grafana }
            - { name: GF_AUTH_GENERIC_OAUTH_AUTH_STYLE, value: InHeader }
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef: {name: grafana-credentials, key: OIDC_CLIENT_SECRET}
            - { name: GF_AUTH_GENERIC_OAUTH_SCOPES, value: 'openid profile groups email' }
            - { name: GF_AUTH_GENERIC_OAUTH_EMPTY_SCOPES, value: 'false' }
            - { name: GF_AUTH_GENERIC_OAUTH_AUTO_LOGIN, value: 'true' }
            - { name: GF_AUTH_GENERIC_OAUTH_AUTH_URL, value: https://identifie.mon.enorme.uk/api/oidc/authorization }
            - { name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL, value: https://identifie.mon.enorme.uk/api/oidc/token }
            - { name: GF_AUTH_GENERIC_OAUTH_API_URL, value: https://identifie.mon.enorme.uk/api/oidc/userinfo }
            - { name: GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH, value: preferred_username }
            - { name: GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH, value: groups }
            - { name: GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH, value: name }
            - { name: GF_AUTH_GENERIC_OAUTH_USE_PKCE, value: 'true' }
            - { name: GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_STRICT, value: 'true' }
            - { name: GF_AUTH_GENERIC_OAUTH_ALLOW_ASSIGN_GRAFANA_ADMIN, value: 'true' }
            - name: GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH
              value: contains(groups, 'grafana.admin') && 'GrafanaAdmin' || contains(groups, 'grafana.viewer') && 'Viewer'
          ports:
            - { name: http, containerPort: 3000 }
          volumeMounts:
            - name: provision-datasources
              mountPath: /etc/grafana/provisioning/datasources/homelab-datasources.yml
              subPath: homelab-datasources.yml
              readOnly: true
            - name: provision-dashboard-providers
              mountPath: /etc/grafana/provisioning/dashboards/homelab-dashboards.yml
              subPath: homelab-dashboards.yml
              readOnly: true
            - name: provision-dashboards-homelab
              mountPath: /etc/grafana/provisioning/dashboards/homelab
              readOnly: true
            - name: data
              mountPath: /var/lib/grafana

          resources:
            requests: { cpu: 250m, memory: 500Mi }
            limits: { cpu: 1000m, memory: 500Mi }

          readinessProbe:
            failureThreshold: 3
            httpGet: {path: /robots.txt, port: 3000, scheme: HTTP}
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            tcpSocket: { port: 3000 }
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: provision-datasources
          configMap:
            name: grafana-providers-cm
            items: [{key: homelab-datasources.yml, path: homelab-datasources.yml}]
        - name: provision-dashboard-providers
          configMap:
            name: grafana-providers-cm
            items: [{key: homelab-dashboards.yml, path: homelab-dashboards.yml}]
        - name: provision-dashboards-homelab
          configMap:
            name: grafana-dashboards-homelab-cm
        - name: data
          persistentVolumeClaim: {claimName: grafana-data-pvc}
      securityContext:
        fsGroup: 472
        supplementalGroups: [0]
