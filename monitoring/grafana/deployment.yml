---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      containers:
        - name: grafana
          image: grafana
          env:
            - { name: GF_SERVER_ROOT_URL, value: https://grafana.homelab.icanwalkonwater.dev }
            - { name: GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION, value: 'true' }
            - { name: GF_AUTH_GENERIC_OAUTH_ENABLED, value: 'true' }
            - { name: GF_AUTH_GENERIC_OAUTH_NAME, value: Authelia }
            - { name: GF_AUTH_GENERIC_OAUTH_ICON, value: signin }
            - { name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID, value: grafana }
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: grafana-oidc-credentials
                  key: client-secret
            - { name: GF_AUTH_GENERIC_OAUTH_SCOPES, value: 'openid profile groups email' }
            - { name: GF_AUTH_GENERIC_OAUTH_EMPTY_SCOPES, value: 'false' }
            - { name: GF_AUTH_GENERIC_OAUTH_AUTO_LOGIN, value: 'true' }
            - { name: GF_AUTH_GENERIC_OAUTH_AUTH_URL, value: https://auth.homelab.icanwalkonwater.dev/api/oidc/authorization }
            - { name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL, value: https://auth.homelab.icanwalkonwater.dev/api/oidc/token }
            - { name: GF_AUTH_GENERIC_OAUTH_API_URL, value: https://auth.homelab.icanwalkonwater.dev/api/oidc/userinfo }
            - { name: GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH, value: preferred_username }
            - { name: GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH, value: groups }
            - { name: GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH, value: name }
            - { name: GF_AUTH_GENERIC_OAUTH_USE_PKCE, value: 'true' }
            - { name: GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_STRICT, value: 'true' }
            - { name: GF_AUTH_GENERIC_OAUTH_ALLOW_ASSIGN_GRAFANA_ADMIN, value: 'true' }
            - name: GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH
              value: contains(groups, 'grafana.admin') && 'GrafanaAdmin' || contains(groups, 'grafana.viewer') && 'Viewer'
          ports:
            - { name: http, containerPort: 3000 }
          volumeMounts:
            - name: provision-prometheus
              mountPath: /etc/grafana/provisioning/datasources/prometheus.yml
              subPath: prometheus.yml
              readOnly: true
            - name: provision-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true

          resources:
            limits: { cpu: 250m, memory: 500Mi }

          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            tcpSocket: { port: 3000 }
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: provision-prometheus
          configMap:
            name: grafana-config-cm
            items:
              - key: datasource-prometheus.yml
                path: prometheus.yml
        - name: provision-dashboards
          configMap:
            name: grafana-config-cm
            items:
              - key: dashboard.yml
                path: dashboard.yml
              - key: dashboard.json
                path: dashboard.json
      securityContext:
        fsGroup: 472
        supplementalGroups: [0]
