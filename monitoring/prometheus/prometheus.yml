global:
  scrape_interval: 30s
  # scrape_interval: 5s

scrape_configs:
  # Scrape services
  - job_name: sd/kubernetes/service/0
    kubernetes_sd_configs:
      - role: service
    relabel_configs:
      # Keep services with `prometheus.io/scrape: true`
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        regex: "true"
        action: keep
      # If `prometheus.io/path` is set, use it as metrics path
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        regex: "(.+)"
        action: replace
        target_label: __metrics_path__
      # If `prometheus.io/port` is set, edit the address' port
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        regex: "([^:]+)(?::\\d+)?;(\\d+)"
        replacement: "$1:$2"
        action: replace
        target_label: __address__

      # Select some interesting labels to keep
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_node_name]
        action: replace
        target_label: node
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: name
      - action: labelmap
        regex: __meta_kubernetes_pod_label_app_kubernetes_io_(.+)
        replacement: app_kubernetes_io_${1}

  # Same as above but with pods annotations instead
  - job_name: sd/kubernetes/pod/0
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      # Keep services with `prometheus.io/scrape: true`
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        regex: "true"
        action: keep
      # If `prometheus.io/path` is set, use it as metrics path
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        regex: "(.+)"
        action: replace
        target_label: __metrics_path__
      # If `prometheus.io/port` is set, edit the address' port
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        regex: "([^:]+)(?::\\d+)?;(\\d+)"
        replacement: "$1:$2"
        action: replace
        target_label: __address__

      # Select some interesting labels to keep
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: node
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: name
      - action: labelmap
        regex: __meta_kubernetes_pod_label_app_kubernetes_io_(.+)
        replacement: app_kubernetes_io_${1}

  # Scrape kubelet's cAdvisor
  - job_name: sd/kubernetes/nodes/0
    scheme: https
    metrics_path: /metrics/cadvisor
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    authorization:
      credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  # Scrape kubelet
  - job_name: sd/kubernetes/nodes/1
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    authorization:
      credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  # Scrape Jellyfin
  - job_name: jellyfin/0
    metrics_path: /probe
    params:
      module: [jellyfin]
    static_configs:
      - targets: [http://jellyfin.jellyfin.svc.cluster.local:8096/Sessions]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: exporter.jellyfin.svc.cluster.local:7979
