---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: octoprint
  labels:
    app.kubernetes.io/name: octoprint
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: octoprint
  replicas: 1
  revisionHistoryLimit: 2
  strategy: { type: Recreate }
  serviceName: octoprint

  template:
    metadata:
      labels:
        app.kubernetes.io/name: octoprint
    spec:
      nodeSelector:
        lucasfilm/printer: 'true'
      tolerations:
        - key: lucasfilm/mortis
          operator: Equal
          value: '1'
          effect: NoSchedule
      containers:
        - name: octoprint
          image: octoprint
          enableServiceLinks: false
          env:
            - { name: OCTOPRINT_PORT, value: '5000' }
            - { name: ENABLE_MJPG_STREAMER, value: 'false' }
          ports:
            - { name: http, containerPort: 80 }
          volumeMounts:
            - name: storage
              mountPath: /octoprint
          resources:
            limits: { cpu: 2000m, memory: 256Mi }
          securityContext:
            privileged: true

  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes: [ReadWriteOncePod]
        storageClassName: local-path-fast
        resources:
          requests: { storage: 10Gi }
